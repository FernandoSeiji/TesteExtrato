// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteExtrato.Infra.Dados;

#nullable disable

namespace TesteExtrato.Infra.Dados.Migrations
{
    [DbContext(typeof(LocalContext))]
    [Migration("20240906120251_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("teste_extrato")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteExtrato.Dominio.Agregados.AgregadoContaCorrente.ContaCorrente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ContaCorrente", "teste_extrato");
                });

            modelBuilder.Entity("TesteExtrato.Dominio.Agregados.AgregadoContaCorrente.TipoTransacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoTransacao", "teste_extrato");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Valor depositado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Valor sacado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Transferência recebida"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Transferência enviada"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Pagamento realizado"
                        });
                });

            modelBuilder.Entity("TesteExtrato.Dominio.Agregados.AgregadoPessoa.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Pessoa", "teste_extrato");
                });

            modelBuilder.Entity("TesteExtrato.Dominio.Agregados.AgregadoContaCorrente.ContaCorrente", b =>
                {
                    b.HasOne("TesteExtrato.Dominio.Agregados.AgregadoPessoa.Pessoa", null)
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("TesteExtrato.Dominio.Agregados.AgregadoContaCorrente.Transacao", "Transacoes", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ContaCorrenteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("Data")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Tipo")
                                .HasColumnType("int")
                                .HasColumnName("TipoTransacaoId");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("Id");

                            b1.HasIndex("ContaCorrenteId");

                            b1.ToTable("Transacoes", "teste_extrato");

                            b1.WithOwner()
                                .HasForeignKey("ContaCorrenteId");
                        });

                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
